include "kamon"

akka {
  loglevel = "ERROR"
  coordinated-shutdown.exit-jvm = on
  
  actor {
    provider = cluster
    warn-about-java-serializer-usage = on
    allow-java-serialization = on

    serializers {
      attribute-added = "it.pagopa.pdnd.interop.uservice.attributeregistrymanagement.model.persistence.serializer.AttributeAddedSerializer"
      state = "it.pagopa.pdnd.interop.uservice.attributeregistrymanagement.model.persistence.serializer.StateSerializer"
    }
    serialization-identifiers {
      "it.pagopa.pdnd.interop.uservice.attributeregistrymanagement.model.persistence.serializer.AttributeAddedSerializer" = 10000
      "it.pagopa.pdnd.interop.uservice.attributeregistrymanagement.model.persistence.serializer.StateSerializer" = 20000
      "java.io.serializable" = none
    }
    serialization-bindings {
      "it.pagopa.pdnd.interop.uservice.attributeregistrymanagement.model.persistence.AttributeAdded" = attribute-added
      "it.pagopa.pdnd.interop.uservice.attributeregistrymanagement.model.persistence.State" = state
    }
  }

  cluster {
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    sharding {
      passivate-idle-entity-after = 1800 seconds
      number-of-shards = 240 //number of nodes * 10
    }
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }

  typed {
    stash-capacity = 200000
  }

  management {
    health-checks {
      readiness-checks {
        ready = "it.pagopa.pdnd.interop.uservice.attributeregistrymanagement.server.impl.HealthCheck"
      }
      liveness-checks {
        live = "it.pagopa.pdnd.interop.uservice.attributeregistrymanagement.server.impl.LiveCheck"
      }
    }
    cluster.bootstrap {
      contact-point-discovery {
        discovery-method = kubernetes-api
        required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
      }
    }
  }
}

pdnd-interop-uservice-attribute-registry-management {
  idle-timeout = 60 seconds
  number-of-events-before-snapshot = 1000
  persistence = "memory"
  port = 8088
}
